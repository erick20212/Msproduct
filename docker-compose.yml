version: '3.8'

services:
  flask-app:
    build: .
    container_name: flask_app
    restart: always
    env_file:
      - .env
    ports:
      - "5000:5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flask.rule=Host(`localhost`)"
      - "traefik.http.routers.flask.entrypoints=web"
      - "traefik.http.services.flask.loadbalancer.server.port=5000"
    depends_on:
      - db
    networks:
      - backend

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"  # Dashboard de Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
